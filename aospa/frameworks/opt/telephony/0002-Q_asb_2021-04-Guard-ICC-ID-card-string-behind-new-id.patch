From cd0ef308097ef613b331c452afbbf012f95a92c7 Mon Sep 17 00:00:00 2001
From: Michael Groover <mpgroover@google.com>
Date: Fri, 20 Mar 2020 13:25:06 -0700
Subject: [PATCH 02/11] [Q_asb_2021-04] Guard ICC ID card string behind new
 identifier access requirements

In Android 10 access to device identifiers was limited to apps with
the READ_PRIVILEGED_PHONE_STATE permission, carrier privileges, the
READ_DEVICE_IDENTIFIERS appop set to allow, or those that pass a
device / profile owner check. TelephonyManager#getSimSerialNumber
was guarded behind these new access requirements, but the same value
is still accessible via SubscriptionInfo#getCardString. While this
API is hidden toString or a parcelable can be used to obtain it. This
change clears out the card string in any returned SubscriptionInfo
objects if the caller does not meet the new identifier access
requirements.

Bug: 152057778
Bug: 173421434
Test: atest SubscriptionControllerTest
Change-Id: I4406f1a2859f8ab691bb9f07da6940fb85e5cbb4
Merged-In: I4406f1a2859f8ab691bb9f07da6940fb85e5cbb4
(cherry picked from commit 7dfee2e7c3f762d069b8c606f8591498f109ff3e)
---
 .../telephony/SubscriptionController.java        |  1 +
 .../telephony/SubscriptionControllerTest.java    | 16 ++++++++++++----
 2 files changed, 13 insertions(+), 4 deletions(-)

diff --git a/src/java/com/android/internal/telephony/SubscriptionController.java b/src/java/com/android/internal/telephony/SubscriptionController.java
index 44f9b64557..77f0deed79 100644
--- a/src/java/com/android/internal/telephony/SubscriptionController.java
+++ b/src/java/com/android/internal/telephony/SubscriptionController.java
@@ -3730,6 +3730,7 @@ public class SubscriptionController extends ISub.Stub {
         if (!hasSubscriberIdentifierAccess(subInfo.getSubscriptionId(), callingPackage, message)) {
             result = new SubscriptionInfo(subInfo);
             result.clearIccId();
+            result.clearCardString();
         }
         return result;
     }
diff --git a/tests/telephonytests/src/com/android/internal/telephony/SubscriptionControllerTest.java b/tests/telephonytests/src/com/android/internal/telephony/SubscriptionControllerTest.java
index db6cc9e2aa..015218d186 100644
--- a/tests/telephonytests/src/com/android/internal/telephony/SubscriptionControllerTest.java
+++ b/tests/telephonytests/src/com/android/internal/telephony/SubscriptionControllerTest.java
@@ -984,7 +984,7 @@ public class SubscriptionControllerTest extends TelephonyTest {
     public void testGetActiveSubscriptionInfoWithReadPhoneState() throws Exception {
         // If the calling package only has the READ_PHONE_STATE permission then
         // getActiveSubscriptionInfo should still return a result but the ICC ID should not be
-        // available.
+        // available via getIccId or getCardString.
         testInsertSim();
         mContextFixture.removeCallingOrSelfPermission(ContextFixture.PERMISSION_ENABLE_ALL);
         mContextFixture.addCallingOrSelfPermission(Manifest.permission.READ_PHONE_STATE);
@@ -995,6 +995,7 @@ public class SubscriptionControllerTest extends TelephonyTest {
                 subId, mCallingPackage, mCallingFeature);
         assertNotNull(subscriptionInfo);
         assertEquals(UNAVAILABLE_ICCID, subscriptionInfo.getIccId());
+        assertEquals(UNAVAILABLE_ICCID, subscriptionInfo.getCardString());
     }
 
     @Test
@@ -1008,6 +1009,7 @@ public class SubscriptionControllerTest extends TelephonyTest {
                 subId, mCallingPackage, mCallingFeature);
         assertNotNull(subscriptionInfo);
         assertTrue(subscriptionInfo.getIccId().length() > 0);
+        assertTrue(subscriptionInfo.getCardString().length() > 0);
     }
 
     @Test
@@ -1031,7 +1033,7 @@ public class SubscriptionControllerTest extends TelephonyTest {
     public void testGetActiveSubscriptionInfoForSimSlotIndexWithReadPhoneState() throws Exception {
         // If the calling package only has the READ_PHONE_STATE permission then
         // getActiveSubscriptionInfoForSimlSlotIndex should still return the SubscriptionInfo but
-        // the ICC ID should not be available.
+        // the ICC ID should not be available via getIccId or getCardString.
         testInsertSim();
         mContextFixture.removeCallingOrSelfPermission(ContextFixture.PERMISSION_ENABLE_ALL);
         mContextFixture.addCallingOrSelfPermission(Manifest.permission.READ_PHONE_STATE);
@@ -1042,6 +1044,7 @@ public class SubscriptionControllerTest extends TelephonyTest {
                         mCallingPackage, mCallingFeature);
         assertNotNull(subscriptionInfo);
         assertEquals(UNAVAILABLE_ICCID, subscriptionInfo.getIccId());
+        assertEquals(UNAVAILABLE_ICCID, subscriptionInfo.getCardString());
     }
 
     @Test
@@ -1056,6 +1059,7 @@ public class SubscriptionControllerTest extends TelephonyTest {
                         mCallingPackage, mCallingFeature);
         assertNotNull(subscriptionInfo);
         assertTrue(subscriptionInfo.getIccId().length() > 0);
+        assertTrue(subscriptionInfo.getCardString().length() > 0);
     }
 
     @Test
@@ -1076,7 +1080,7 @@ public class SubscriptionControllerTest extends TelephonyTest {
     public void testGetActiveSubscriptionInfoListWithReadPhoneState() throws Exception {
         // If the calling package only has the READ_PHONE_STATE permission then
         // getActiveSubscriptionInfoList should still return the list of SubscriptionInfo objects
-        // but the ICC ID should not be available.
+        // but the ICC ID should not be available via getIccId or getCardString.
         testInsertSim();
         mContextFixture.removeCallingOrSelfPermission(ContextFixture.PERMISSION_ENABLE_ALL);
         mContextFixture.addCallingOrSelfPermission(Manifest.permission.READ_PHONE_STATE);
@@ -1088,6 +1092,7 @@ public class SubscriptionControllerTest extends TelephonyTest {
         assertTrue(subInfoList.size() > 0);
         for (SubscriptionInfo info : subInfoList) {
             assertEquals(UNAVAILABLE_ICCID, info.getIccId());
+            assertEquals(UNAVAILABLE_ICCID, info.getCardString());
         }
     }
 
@@ -1103,6 +1108,7 @@ public class SubscriptionControllerTest extends TelephonyTest {
         assertTrue(subInfoList.size() > 0);
         for (SubscriptionInfo info : subInfoList) {
             assertTrue(info.getIccId().length() > 0);
+            assertTrue(info.getCardString().length() > 0);
         }
     }
 
@@ -1126,7 +1132,7 @@ public class SubscriptionControllerTest extends TelephonyTest {
     public void testGetSubscriptionsInGroupWithReadPhoneState() throws Exception {
         // If the calling package only has the READ_PHONE_STATE permission then
         // getSubscriptionsInGroup should still return the list of SubscriptionInfo objects
-        // but the ICC ID should not be available.
+        // but the ICC ID should not be available via getIccId or getCardString.
         ParcelUuid groupUuid = setupGetSubscriptionsInGroupTest();
         mContextFixture.removeCallingOrSelfPermission(ContextFixture.PERMISSION_ENABLE_ALL);
         mContextFixture.addCallingOrSelfPermission(Manifest.permission.READ_PHONE_STATE);
@@ -1137,6 +1143,7 @@ public class SubscriptionControllerTest extends TelephonyTest {
         assertTrue(subInfoList.size() > 0);
         for (SubscriptionInfo info : subInfoList) {
             assertEquals(UNAVAILABLE_ICCID, info.getIccId());
+            assertEquals(UNAVAILABLE_ICCID, info.getCardString());
         }
     }
 
@@ -1151,6 +1158,7 @@ public class SubscriptionControllerTest extends TelephonyTest {
         assertTrue(subInfoList.size() > 0);
         for (SubscriptionInfo info : subInfoList) {
             assertTrue(info.getIccId().length() > 0);
+            assertTrue(info.getCardString().length() > 0);
         }
     }
 
-- 
2.35.1

