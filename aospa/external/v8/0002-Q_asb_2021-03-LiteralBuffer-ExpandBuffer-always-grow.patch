From 59761139536999ff275ef3ec7e4aa8d39207c457 Mon Sep 17 00:00:00 2001
From: Toon Verwaest <verwaest@chromium.org>
Date: Fri, 11 Jan 2019 11:27:18 +0100
Subject: [PATCH 2/2] [Q_asb_2021-03] LiteralBuffer::ExpandBuffer always grows

Upstream: https://chromium-review.googlesource.com/c/1405859

Bug: 168041375
Test: atest proxy_resolver_v8_unittest
Change-Id: I63dc386af7bebeaa217b864cd1931af79f75c53e
(cherry picked from commit 05cbe2825f00470860200896b20960b66e2549ee)
---
 src/parsing/scanner.cc | 9 +++++----
 src/parsing/scanner.h  | 3 +--
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/src/parsing/scanner.cc b/src/parsing/scanner.cc
index 781832c2..38d1936f 100644
--- a/src/parsing/scanner.cc
+++ b/src/parsing/scanner.cc
@@ -68,13 +68,14 @@ Handle<String> Scanner::LiteralBuffer::Internalize(Isolate* isolate) const {
 }
 
 int Scanner::LiteralBuffer::NewCapacity(int min_capacity) {
-  int capacity = Max(min_capacity, backing_store_.length());
-  int new_capacity = Min(capacity * kGrowthFactory, capacity + kMaxGrowth);
-  return new_capacity;
+  return min_capacity < (kMaxGrowth / (kGrowthFactor - 1))
+             ? min_capacity * kGrowthFactor
+             : min_capacity + kMaxGrowth;
 }
 
 void Scanner::LiteralBuffer::ExpandBuffer() {
-  Vector<byte> new_store = Vector<byte>::New(NewCapacity(kInitialCapacity));
+  int min_capacity = Max(kInitialCapacity, backing_store_.length());
+  Vector<byte> new_store = Vector<byte>::New(NewCapacity(min_capacity));
   MemCopy(new_store.start(), backing_store_.start(), position_);
   backing_store_.Dispose();
   backing_store_ = new_store;
diff --git a/src/parsing/scanner.h b/src/parsing/scanner.h
index e592debd..02cd247f 100644
--- a/src/parsing/scanner.h
+++ b/src/parsing/scanner.h
@@ -482,8 +482,7 @@ class Scanner {
 
    private:
     static const int kInitialCapacity = 16;
-    static const int kGrowthFactory = 4;
-    static const int kMinConversionSlack = 256;
+    static const int kGrowthFactor = 4;
     static const int kMaxGrowth = 1 * MB;
 
     inline bool IsValidAscii(char code_unit) {
-- 
2.34.1

